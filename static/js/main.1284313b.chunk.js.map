{"version":3,"sources":["App.styles.ts","libs/firebase.ts","services/photos.ts","components/PhotoItem/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Container","styled","div","Area","Header","h1","ScreenWarning","PhotoList","UploadForm","form","firebaseApp","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","storage","getStorage","getAll","a","list","imagesFolder","ref","listAll","photoList","items","i","getDownloadURL","photoUrl","push","name","url","insert","file","includes","type","randomName","createId","newFile","uploadBytes","upload","Error","PhotoItem","src","alt","App","useState","uploading","setUploading","loading","setLoading","photos","setPhotos","useEffect","getPhotos","Photos","handleFormSubmit","e","preventDefault","formData","FormData","currentTarget","get","size","result","alert","message","newPhotoList","method","onSubmit","value","className","length","map","item","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1284313b.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  background: #27282f;\r\n  color: #fff;\r\n  min-height: 100vh;\r\n`\r\n\r\nexport const Area = styled.div`\r\n  margin: auto;\r\n  max-width: 980px;\r\n  padding: 30px 0;\r\n`\r\n\r\nexport const Header = styled.h1`\r\n  margin: 0;\r\n  padding: 0;\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n`\r\n\r\nexport const ScreenWarning = styled.div`\r\n  text-align: center;\r\n  .emoji {\r\n    font-size: 50px;\r\n    margin-bottom: 20px;\r\n  }\r\n`\r\n\r\nexport const PhotoList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  gap: 10px;\r\n`\r\n\r\nexport const UploadForm = styled.form`\r\n  background: #3d3f43;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  margin-bottom: 30px;\r\n  input[type=submit] {\r\n    background: #756df4;\r\n    border: 0;\r\n    color: #fff;\r\n    padding: 8px 16px;\r\n    font-size: 15px;\r\n    border-radius: 10px;\r\n    margin: 0 20px;\r\n    cursor: pointer;\r\n    &:hover {\r\n      opacity: 0.9;\r\n    }\r\n  }\r\n`","import { initializeApp } from 'firebase/app'\r\nimport { getStorage } from 'firebase/storage'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGINGSENDERID,\r\n  appId: process.env.REACT_APP_FIREBASE_APPID\r\n};\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig)\r\n\r\nexport const storage = getStorage(firebaseApp)","import { Photo } from '../types/Photo'\r\nimport { storage } from '../libs/firebase'\r\nimport { ref, listAll, getDownloadURL, uploadBytes } from 'firebase/storage'\r\nimport { v4 as createId } from 'uuid'\r\n\r\nexport const getAll = async () => {\r\n  let list: Photo[] = []\r\n\r\n  const imagesFolder = ref(storage, 'images')\r\n  const photoList = await listAll(imagesFolder)\r\n\r\n  for (let i in photoList.items) {\r\n\r\n    let photoUrl = await getDownloadURL(photoList.items[i])\r\n\r\n    list.push({\r\n      name: photoList.items[i].name,\r\n      url: photoUrl\r\n    })\r\n\r\n  }\r\n\r\n  return list\r\n}\r\n\r\nexport const insert = async (file: File) => {\r\n  if (['image/jpeg', 'image/jpg', 'image/png'].includes(file.type)) {\r\n\r\n    let randomName = createId()\r\n    let newFile = ref(storage, `images/${randomName}`)\r\n\r\n    let upload = await uploadBytes(newFile, file)\r\n    let photoUrl = await getDownloadURL(upload.ref)\r\n\r\n    return {\r\n      name: upload.ref.name,\r\n      url: photoUrl\r\n    } as Photo\r\n  } else {\r\n    return new Error('Tipo de arquivo nÃ£o permitido.')\r\n  }\r\n\r\n}","import styled from 'styled-components'\r\n\r\ntype Props = {\r\n  url: string\r\n  name: string\r\n}\r\n\r\nconst PhotoItem = ({ url, name }: Props) => {\r\n  return (\r\n    <Container>\r\n      <img src={url} alt=\"foto de Diogo e EmÃ­lia\" />\r\n      {name}\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  background: #3d3f43;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  img {\r\n    max-width: 100%;\r\n    display: block;\r\n    margin-bottom: 10px;\r\n    border-radius: 10px;\r\n  }\r\n`\r\n\r\nexport default PhotoItem","import { useState, useEffect, FormEvent } from 'react'\nimport { Container, Area, Header, ScreenWarning, PhotoList, UploadForm } from './App.styles'\nimport * as Photos from './services/photos'\nimport { Photo } from './types/Photo'\nimport PhotoItem from './components/PhotoItem'\n\nconst App = () => {\n\n  const [uploading, setUploading] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [photos, setPhotos] = useState<Photo[]>([])\n\n  useEffect(() => {\n    const getPhotos = async () => {\n      setLoading(true)\n      setPhotos(await Photos.getAll())\n      setLoading(false)\n    }\n    getPhotos()\n  }, [])\n\n  const handleFormSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n\n    const formData = new FormData(e.currentTarget)\n    const file = formData.get('image') as File\n\n    if (file && file.size > 0) {\n      setUploading(true)\n      let result = await Photos.insert(file)\n      setUploading(false)\n\n      if(result instanceof Error) {\n        alert(`${result.name} - ${result.message}`)\n      } else {\n        let newPhotoList = [...photos]\n        newPhotoList.push(result)\n        setPhotos(newPhotoList)\n      }\n    }\n\n  }\n\n  return (\n    <Container>\n      <Area>\n      <Header>Galeria de Fotos</Header>\n\n      <UploadForm method=\"POST\" onSubmit={handleFormSubmit}>\n        <input type=\"file\" name=\"image\" />\n        <input type=\"submit\" value=\"Enviar\" />\n        {uploading && 'Enviando...'}\n      </UploadForm>\n\n      {loading &&\n        <ScreenWarning>\n          <div className='emoji'>âœ‹</div>\n          <div>Carregando...</div>\n        </ScreenWarning>\n      }\n\n      {!loading && photos.length > 0 &&\n        <PhotoList>\n          {photos.map((item, index) => (\n            <PhotoItem key={index} url={item.url} name={item.name} />\n          ))}\n        </PhotoList>\n      }\n\n      {!loading && photos.length === 0 &&\n        <ScreenWarning>\n          <div className='emoji'>ðŸ‘Ž</div>\n          <div>NÃ£o hÃ¡ fotos cadastradas.</div>\n        </ScreenWarning>\n      }\n\n      </Area>\n    </Container>\n  )\n}\n\nexport default App","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}